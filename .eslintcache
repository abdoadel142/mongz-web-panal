[{"H:\\GitHub\\mongz-web-panal\\src\\index.js":"1","H:\\GitHub\\mongz-web-panal\\src\\App.js":"2","H:\\GitHub\\mongz-web-panal\\src\\components\\Navbar.js":"3","H:\\GitHub\\mongz-web-panal\\src\\pages\\Reports.js":"4","H:\\GitHub\\mongz-web-panal\\src\\pages\\Products.js":"5","H:\\GitHub\\mongz-web-panal\\src\\pages\\Home.js":"6","H:\\GitHub\\mongz-web-panal\\src\\pages\\PrivateRoute.js":"7","H:\\GitHub\\mongz-web-panal\\src\\pages\\auth\\Login.js":"8","H:\\GitHub\\mongz-web-panal\\src\\pages\\auth\\Signup.js":"9","H:\\GitHub\\mongz-web-panal\\src\\components\\Contexts\\AuthContext.js":"10","H:\\GitHub\\mongz-web-panal\\src\\components\\SidebarData.js":"11","H:\\GitHub\\mongz-web-panal\\src\\pages\\ProductForm.js":"12","H:\\GitHub\\mongz-web-panal\\src\\pages\\Restaurants.js":"13"},{"size":339,"mtime":1609447060119,"results":"14","hashOfConfig":"15"},{"size":736,"mtime":1609256188204,"results":"16","hashOfConfig":"15"},{"size":1444,"mtime":1609098128516,"results":"17","hashOfConfig":"15"},{"size":167,"mtime":1609098128518,"results":"18","hashOfConfig":"15"},{"size":4192,"mtime":1609446868965,"results":"19","hashOfConfig":"15"},{"size":870,"mtime":1609703745739,"results":"20","hashOfConfig":"15"},{"size":437,"mtime":1609195374021,"results":"21","hashOfConfig":"15"},{"size":2001,"mtime":1609255855954,"results":"22","hashOfConfig":"15"},{"size":2416,"mtime":1609195436402,"results":"23","hashOfConfig":"15"},{"size":1200,"mtime":1609263811530,"results":"24","hashOfConfig":"15"},{"size":1008,"mtime":1609696284130,"results":"25","hashOfConfig":"15"},{"size":6857,"mtime":1609703638112,"results":"26","hashOfConfig":"15"},{"size":2926,"mtime":1609698993516,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"163gd9d",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\GitHub\\mongz-web-panal\\src\\index.js",[],["57","58"],"H:\\GitHub\\mongz-web-panal\\src\\App.js",[],"H:\\GitHub\\mongz-web-panal\\src\\components\\Navbar.js",[],"H:\\GitHub\\mongz-web-panal\\src\\pages\\Reports.js",[],"H:\\GitHub\\mongz-web-panal\\src\\pages\\Products.js",[],"H:\\GitHub\\mongz-web-panal\\src\\pages\\Home.js",[],"H:\\GitHub\\mongz-web-panal\\src\\pages\\PrivateRoute.js",[],"H:\\GitHub\\mongz-web-panal\\src\\pages\\auth\\Login.js",[],"H:\\GitHub\\mongz-web-panal\\src\\pages\\auth\\Signup.js",[],"H:\\GitHub\\mongz-web-panal\\src\\components\\Contexts\\AuthContext.js",["59","60"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function signup(email, password) {\r\n    const user = await axios.put(\"http://192.168.1.71:8080/auth/adminSignup\", {\r\n      email: email,\r\n      password: password,\r\n    });\r\n    setLoading(false);\r\n    setCurrentUser(user.data.userId);\r\n    return user;\r\n  }\r\n\r\n  async function login(email, password) {\r\n    const user = await axios.post(\"http://192.168.1.71:8080/auth/adminLogin\", {\r\n      email: email,\r\n      password: password,\r\n    });\r\n    setLoading(false);\r\n    setCurrentUser(user.data.userId);\r\n    return user;\r\n  }\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    signup,\r\n    getProducts,\r\n  };\r\n\r\n  async function getProducts() {\r\n    const products = await axios.get(\"http://192.168.1.71:8080/\");\r\n    return products;\r\n  }\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n","H:\\GitHub\\mongz-web-panal\\src\\components\\SidebarData.js",[],"H:\\GitHub\\mongz-web-panal\\src\\pages\\ProductForm.js",["61"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ProductForm.css\";\r\nimport Restaurants from \"./Restaurants\";\r\n\r\nclass ProductForm extends Component {\r\n  state = {\r\n    // id: \"\",\r\n    name: \"\",\r\n    description: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n    // location: \"\",\r\n    imageUrl: \"\",\r\n    address: \"\",\r\n    openingHour: \"\",\r\n    // openingHours: \"\",\r\n    closingHour: \"\",\r\n    // menuId: \"\",\r\n    rate: \"2\",\r\n    type: \"\",\r\n    // restaurant: \"\",\r\n    // pharmacie: \"\",\r\n    // grocerie: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.id;\r\n    if (id !== \"new\") {\r\n      console.log(id);\r\n      const { data } = await axios.get(\r\n        \"http://192.168.1.71:8080/admin/restaurants/\" + id\r\n      );\r\n\r\n      //Clone\r\n      const state = { ...this.state };\r\n      // //Edit\r\n      state.name = data.restaurant.name;\r\n      state.description = data.restaurant.description;\r\n      state.type = data.restaurant.type;\r\n      state.rate = data.restaurant.rate;\r\n      state.address = data.restaurant.address;\r\n      state.latitude = data.restaurant.location[0].latitude;\r\n      state.longitude = data.restaurant.location[0].longitude;\r\n\r\n      // state.openingHours = data.restaurant.openingHours;\r\n      //Set state\r\n      this.setState(state);\r\n    }\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    //ADD\r\n    if (this.props.match.params.id === \"new\") {\r\n      //Call Backend\r\n      const obj = {\r\n        ...this.state,\r\n      };\r\n      await axios.post(\"http://192.168.1.71:8080/admin/addProduct\", obj);\r\n    } else {\r\n      //EDit\r\n      const obj = {\r\n        ...this.state,\r\n      };\r\n\r\n      await axios.put(\r\n        \"http://192.168.1.71:8080/admin/restaurants/\" +\r\n          this.props.match.params.id,\r\n        obj\r\n      );\r\n    }\r\n\r\n    this.props.history.replace(\"/restaurants\");\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    //Clone\r\n    let state = { ...this.state };\r\n    //Edit\r\n    state[e.currentTarget.name] = e.currentTarget.value;\r\n    //Set state\r\n    this.setState(state);\r\n  };\r\n\r\n  handleOptionChange = () => {\r\n    let type = document.getElementById(\"type\");\r\n    let value = type.options[type.selectedIndex].value;\r\n    console.log(value);\r\n\r\n    //Clone\r\n    let state = { ...this.state };\r\n    //Edit\r\n    state[\"type\"] = value;\r\n    // Set state\r\n    this.setState(state);\r\n  };\r\n\r\n  handleTimeChange = (name, value) => {\r\n    //Clone\r\n    let state = { ...this.state };\r\n    //Edit\r\n    state[name] = value;\r\n    //Set state\r\n    this.setState(state);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {/* <h1>\r\n          {this.props.match.params.id === \"new\"\r\n            ? \"Add Product\"\r\n            : \"Edit Product\"}\r\n        </h1> */}\r\n        <div class=\"title\">\r\n          {this.props.match.params.id === \"new\"\r\n            ? \"Add Product\"\r\n            : \"Edit Product\"}\r\n        </div>\r\n        <form className=\"form\" onSubmit={this.handleSubmit}>\r\n          <div className=\"inputfield\">\r\n            <label>Name</label>\r\n            <input\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              className=\"input\"\r\n              onChange={this.handleChange}\r\n              value={this.state.name}\r\n            />\r\n          </div>\r\n          <div className=\"inputfield\">\r\n            <label>Description</label>\r\n            <textarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              className=\"textarea\"\r\n              onChange={this.handleChange}\r\n              value={this.state.description}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"inputfield\">\r\n            <label>Latitude</label>\r\n            <input\r\n              id=\"latitude\"\r\n              name=\"latitude\"\r\n              type=\"number\"\r\n              className=\"input\"\r\n              onChange={this.handleChange}\r\n              value={this.state.latitude}\r\n            />\r\n            {/* </div>\r\n          <div className=\"inputfield\"> */}\r\n            <label>Longitude</label>\r\n            <input\r\n              id=\"longitude\"\r\n              name=\"longitude\"\r\n              type=\"number\"\r\n              className=\"input\"\r\n              onChange={this.handleChange}\r\n              value={this.state.longitude}\r\n            />\r\n          </div>\r\n          <div className=\"inputfield\">\r\n            <label>Address</label>\r\n            <input\r\n              id=\"address\"\r\n              name=\"address\"\r\n              type=\"text\"\r\n              className=\"input\"\r\n              onChange={this.handleChange}\r\n              value={this.state.address}\r\n            />\r\n          </div>\r\n          <div className=\"inputfield\">\r\n            <label>Image</label>\r\n            <input\r\n              id=\"imageUrl\"\r\n              name=\"imageUrl\"\r\n              type=\"file\"\r\n              className=\"input\"\r\n              onChange={this.handleChange}\r\n              value={this.state.imageUrl}\r\n            />\r\n          </div>\r\n          <div className=\"inputfield\">\r\n            <label>Opening Hours</label>\r\n            <input\r\n              id=\"openTime\"\r\n              name=\"openTime\"\r\n              type=\"time\"\r\n              className=\"input\"\r\n              onChange={() => {\r\n                let openTime = document.getElementById(\"openTime\").value;\r\n                this.handleTimeChange(\"openingHour\", openTime);\r\n              }}\r\n            />\r\n            {/* </div>\r\n          <div className=\"inputfield\"> */}\r\n            <label>Closing Hours</label>\r\n            <input\r\n              id=\"closeTime\"\r\n              name=\"closeTime\"\r\n              type=\"time\"\r\n              className=\"input\"\r\n              onChange={() => {\r\n                let closeTime = document.getElementById(\"closeTime\").value;\r\n                this.handleTimeChange(\"closingHour\", closeTime);\r\n              }}\r\n            />\r\n          </div>\r\n          {this.props.match.params.id === \"new\" && (\r\n            <div className=\"inputfield\">\r\n              <label>Type</label>\r\n              <div className=\"custom_select\">\r\n                <select id=\"type\" onChange={this.handleOptionChange}>\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"restaurant\">Restaurant</option>\r\n                  <option value=\"pharmacie\">Pharmacie</option>\r\n                  <option value=\"grocerie\">Grocerie</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"inputfield\">\r\n            <input\r\n              type=\"submit\"\r\n              value={this.props.match.params.id === \"new\" ? \"Add\" : \"Edit\"}\r\n              className=\"btn\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductForm;\r\n","H:\\GitHub\\mongz-web-panal\\src\\pages\\Restaurants.js",["62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":1,"column":39,"nodeType":"69","messageId":"70","endLine":1,"endColumn":48},{"ruleId":"67","severity":1,"message":"71","line":11,"column":10,"nodeType":"69","messageId":"70","endLine":11,"endColumn":17},{"ruleId":"67","severity":1,"message":"72","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":25,"column":46,"nodeType":"75","messageId":"76","endLine":25,"endColumn":48},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'Restaurants' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]